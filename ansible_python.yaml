# ansible-playbook -i ~/Dropbox/code/scripts/hosts ~/Dropbox/code/scripts/ansible_python.yaml
# ansible-playbook -i ~/Dropbox/code/scripts/hosts ~/Dropbox/code/scripts/ansible_python.yaml --tags "anaconda"

#################################################################################################################
# ./hosts file contains:
#
# [hortonworks_ambari]
# dzaratsian0.field.hortonworks.com
#
# [hortonworks_non_ambari_nodes]
# dzaratsian1.field.hortonworks.com
# dzaratsian2.field.hortonworks.com
# dzaratsian3.field.hortonworks.com
# dzaratsian4.field.hortonworks.com 
#
# [hortonworks_datanodes]
# dzaratsian2.field.hortonworks.com
# dzaratsian3.field.hortonworks.com
# dzaratsian4.field.hortonworks.com 
#################################################################################################################

- hosts: hortonworks_datanodes
  
  remote_user: centos
  #become: yes
  #become_user: hdfs
  #become_method: su
  
  tasks:
    
    ########################################################  
    #
    #   Current Python Version
    #
    ########################################################
    - name: Capture Initial Python Version
      tags: anaconda, miniconda
      command: python --version
      register: python_version
    
    - debug: msg="{{ python_version.stderr }}"
      tags: anaconda, miniconda
    
    ########################################################
    # 
    #   Current User
    #
    ########################################################
    - name: Capture Current User
      tags: anaconda, miniconda
      command: whoami
      register: current_user
    
    - debug: msg="{{ current_user.stdout }}"
      tags: anaconda, miniconda
    
    ########################################################
    #
    #   Cleanup / Remove Existing Envs
    #
    ########################################################
    - name: Cleanup / Remove existing miniconda environment
      tags: miniconda
      become: yes
      become_user: root
      become_method: sudo
      command: "{{item}}"
      with_items:
        - rm -rf /opt/miniconda
        - rm -rf /tmp/miniconda.sh
    
    - name: Cleanup / Remove existing anaconda environment
      tags: anaconda
      become: yes
      become_user: root
      become_method: sudo
      command: "{{item}}"
      with_items:
        - rm -rf /opt/anaconda
        - rm -rf /tmp/anaconda.sh
    
    ########################################################
    #
    #   Install MiniConda
    #
    ########################################################
    - name: Download MiniConda
      tags: miniconda
      command: wget http://repo.continuum.io/miniconda/Miniconda3-3.7.0-Linux-x86_64.sh -O miniconda.sh
      args:
        chdir: /tmp/
    
    - name: chmod file
      tags: miniconda
      command: chmod +x /tmp/miniconda.sh
    
    - name: Install MiniConda
      tags: miniconda
      become: yes
      become_user: root
      become_method: sudo
      command: "{{item}}"
      with_items:
        - yum install -y bzip2
        - /tmp/miniconda.sh -b -p /opt/miniconda
        - export PATH="/opt/miniconda/bin:$PATH"
        
    - name: Install MiniConda python packages
      tags: miniconda
      become: yes
      become_user: root
      become_method: sudo
      command: "/opt/miniconda/bin/conda install {{ item }}"
      with_items:
        - numpy
        - pandas
      responses:
        Questions:
          - 'y'
    
    ########################################################
    #
    #   Install Anaconda 3.x
    #
    ########################################################
    - name: Download Anaconda
      tags: anaconda
      command: wget https://repo.anaconda.com/archive/Anaconda3-5.1.0-Linux-x86_64.sh -O anaconda.sh
      args:
        chdir: /tmp/
    
    - name: chmod file
      tags: anaconda
      command: chmod +x /tmp/anaconda.sh
    
    - name: Install bzip2 (for Centos)
      tags: anaconda
      become: yes
      become_user: root
      become_method: sudo
      command: "{{item}}"
      with_items:
        - yum install -y bzip2
        - /tmp/anaconda.sh -b -p /opt/anaconda
    
    - name: Add anaconda to .bashrc $PATH
      tags: anaconda
      become: yes
      become_user: root
      become_method: sudo
      shell: "{{item}}"
      with_items:
        - echo '''export PATH="/opt/anaconda/bin:$PATH"''' >> /root/.bashrc           # root
        - echo '''export PATH="/opt/anaconda/bin:$PATH"''' >> /home/centos/.bashrc    # centos
        - echo '''export PATH="/opt/anaconda/bin:$PATH"''' >> /home/zeppelin/.bashrc  # zeppelin
        - echo '''export PATH="/opt/anaconda/bin:$PATH"''' >> /home/spark/.bashrc     # spark
        - echo '''export PATH="/opt/anaconda/bin:$PATH"''' >> /home/hdfs/.bashrc      # hdfs


##########################################################################################
#
# NOTES:
#
#   http://docs.ansible.com/ansible/latest/index.html
#
#   "command" is more secure than "shell". However, "shell" uses env variables. Some 
#   stream operations will also note work with "command", such as >, &, etc.
#
#
##########################################################################################

#ZEND
